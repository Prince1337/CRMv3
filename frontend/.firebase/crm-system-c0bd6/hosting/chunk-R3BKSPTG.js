import{a as T}from"./chunk-562UQ2XR.js";import{d as p}from"./chunk-BYEZXU77.js";import{I as l,L as m,Q as u,Tb as E,c as i,g,k as h,v as o}from"./chunk-ZEIBLRTY.js";import{a as d,b as S}from"./chunk-CWTPBX7D.js";var K=(()=>{class a{constructor(t,e){this.http=t,this.router=e,this.API_URL=T.API_BASE_URL,this.TOKEN_KEY="accessToken",this.REFRESH_TOKEN_KEY="refreshToken",this.USER_KEY="user",this.authStateSubject=new g({isAuthenticated:!1,user:null,accessToken:null,refreshToken:null}),this._isInitialized=!1,this.authState$=this.authStateSubject.asObservable(),this.initializeAuthState(),this.isAuthenticated()&&this.getUserProfile().subscribe({next:r=>{this.updateUserProfile(r)},error:r=>{console.error("Fehler beim Laden des User-Profils beim Start:",r)}})}initializeAuthState(){let t=localStorage.getItem(this.TOKEN_KEY),e=localStorage.getItem(this.REFRESH_TOKEN_KEY);if(t&&e)try{let r=JSON.parse(atob(t.split(".")[1])),n=Math.floor(Date.now()/1e3);if(r.exp&&r.exp<n){console.warn("Token ist beim Start abgelaufen, f\xFChre Logout durch"),this.handleLogout(),this._isInitialized=!0;return}this.getUserProfile().subscribe({next:s=>{localStorage.setItem(this.USER_KEY,JSON.stringify(s)),this.authStateSubject.next({isAuthenticated:!0,user:s,accessToken:t,refreshToken:e}),this._isInitialized=!0},error:s=>{console.error("Fehler beim Laden des User-Profils beim Start:",s);let c=localStorage.getItem(this.USER_KEY),f=c?JSON.parse(c):null;f?this.authStateSubject.next({isAuthenticated:!0,user:f,accessToken:t,refreshToken:e}):this.handleLogout(),this._isInitialized=!0}})}catch(r){console.error("Fehler bei der lokalen Token-Validierung beim Start:",r),this.handleLogout(),this._isInitialized=!0}else this._isInitialized=!0}login(t){return this.http.post(`${this.API_URL}/auth/login`,t).pipe(l(e=>this.handleAuthSuccess(e)),o(this.handleError))}register(t){return this.http.post(`${this.API_URL}/auth/register`,t).pipe(o(this.handleError))}logout(){let t=this.getAccessToken(),e={};return t&&(e.Authorization=`Bearer ${t}`),this.http.post(`${this.API_URL}/auth/logout`,{},{headers:e}).pipe(l(()=>this.handleLogout()),o(r=>(console.error("Logout-Request fehlgeschlagen:",r),this.handleLogout(),h(()=>r))))}refreshToken(){let t=localStorage.getItem(this.REFRESH_TOKEN_KEY);return t?this.http.post(`${this.API_URL}/auth/refresh`,{},{headers:{Authorization:`Bearer ${t}`}}).pipe(l(e=>this.handleAuthSuccess(e)),o(e=>(this.handleLogout(),h(()=>e)))):h(()=>new Error("Kein Refresh-Token verf\xFCgbar"))}getUserProfile(){let t=this.getAccessToken(),e={};return t&&(e.Authorization=`Bearer ${t}`),this.http.get(`${this.API_URL}/auth/profile`,{headers:e}).pipe(l(r=>this.updateUserProfile(r)),o(this.handleError))}validateToken(){let t=this.getAccessToken();return t?this.http.post(`${this.API_URL}/auth/validate`,{},{headers:{Authorization:`Bearer ${t}`}}).pipe(o(e=>(console.error("Token-Validierung fehlgeschlagen:",e),new i(r=>{r.next(!1),r.complete()})))):new i(e=>{e.next(!1),e.complete()})}handleAuthSuccess(t){localStorage.setItem(this.TOKEN_KEY,t.accessToken),localStorage.setItem(this.REFRESH_TOKEN_KEY,t.refreshToken),this.getUserProfile().subscribe({next:e=>{localStorage.setItem(this.USER_KEY,JSON.stringify(e)),this.authStateSubject.next({isAuthenticated:!0,user:e,accessToken:t.accessToken,refreshToken:t.refreshToken})},error:e=>{console.error("Fehler beim Laden des User-Profils:",e);let r=this.decodeToken(t.accessToken);localStorage.setItem(this.USER_KEY,JSON.stringify(r)),this.authStateSubject.next({isAuthenticated:!0,user:r,accessToken:t.accessToken,refreshToken:t.refreshToken})}})}handleLogout(){localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.REFRESH_TOKEN_KEY),localStorage.removeItem(this.USER_KEY),this.authStateSubject.next({isAuthenticated:!1,user:null,accessToken:null,refreshToken:null}),this.router.navigate(["/login"])}updateUserProfile(t){localStorage.setItem(this.USER_KEY,JSON.stringify(t));let e=this.authStateSubject.value;this.authStateSubject.next(S(d({},e),{user:t}))}decodeToken(t){try{let e=JSON.parse(atob(t.split(".")[1]));return{userId:e.sub,username:e.username,email:e.email,firstName:e.firstName,lastName:e.lastName,role:e.role||"USER",enabled:e.enabled!==!1,createdAt:e.createdAt||new Date().toISOString(),lastLogin:e.lastLogin}}catch(e){return console.error("Fehler beim Dekodieren des Tokens:",e),{userId:0,username:"",email:"",firstName:"",lastName:"",role:"USER",enabled:!0,createdAt:new Date().toISOString(),lastLogin:void 0}}}handleError(t){let e="Ein unbekannter Fehler ist aufgetreten";return t.error instanceof ErrorEvent?e=t.error.message:t.status===401?e="Ung\xFCltige Anmeldedaten":t.status===403?e="Zugriff verweigert":t.status===404?e="Ressource nicht gefunden":t.status>=500?e="Server-Fehler":t.error?.message&&(e=t.error.message),h(()=>new Error(e))}getAccessToken(){return localStorage.getItem(this.TOKEN_KEY)}getRefreshToken(){return localStorage.getItem(this.REFRESH_TOKEN_KEY)}isAuthenticated(){let t=this.authStateSubject.value;if(!t.accessToken||!t.refreshToken)return!1;try{let e=t.accessToken,r=JSON.parse(atob(e.split(".")[1])),n=Math.floor(Date.now()/1e3);if(r.exp&&r.exp<n)return console.warn("Token ist abgelaufen, f\xFChre Logout durch"),this.handleLogout(),!1}catch(e){return console.error("Fehler beim Pr\xFCfen der Token-Expiration:",e),this.handleLogout(),!1}return t.isAuthenticated}isAuthenticatedAsync(){if(!this._isInitialized)return new i(e=>{let r=()=>{this._isInitialized?(e.next(this.isAuthenticated()),e.complete()):setTimeout(r,50)};r()});let t=this.authStateSubject.value;if(!t.accessToken||!t.refreshToken)return new i(e=>{e.next(!1),e.complete()});try{let e=t.accessToken,r=JSON.parse(atob(e.split(".")[1])),n=Math.floor(Date.now()/1e3);return r.exp&&r.exp<n?(console.warn("Token ist abgelaufen, f\xFChre Logout durch"),this.handleLogout(),new i(s=>{s.next(!1),s.complete()})):new i(s=>{s.next(!0),s.complete()})}catch(e){return console.error("Fehler beim Pr\xFCfen der Token-Expiration:",e),this.handleLogout(),new i(r=>{r.next(!1),r.complete()})}}hasRole(t){return this.authStateSubject.value.user?.role===t||!1}isAdmin(){return this.hasRole("ROLE_ADMIN")}getCurrentUser(){return this.authStateSubject.value.user}isInitialized(){return this._isInitialized}static{this.\u0275fac=function(e){return new(e||a)(u(E),u(p))}}static{this.\u0275prov=m({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();export{K as a};
