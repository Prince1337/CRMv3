version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "${DOCKER_BACKEND_PORT:-8080}:8080"
    environment:
      # Spring Profile
      SPRING_PROFILES_ACTIVE: prod
      
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      
      # JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      
      # JWT Configuration (Production - sicherer)
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-3600000}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION:-2592000000}
      JWT_DEBUG: false
      
      # SSL Configuration
      SSL_ENABLED: ${SSL_ENABLED:-false}
      SSL_KEY_STORE: ${SSL_KEY_STORE}
      SSL_KEY_STORE_PASSWORD: ${SSL_KEY_STORE_PASSWORD}
      SSL_KEY_ALIAS: ${SSL_KEY_ALIAS}
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      
      # Logging (Production - weniger verbose)
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: INFO
      LOGGING_LEVEL_ORG_HIBERNATE: WARN
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: WARN
      LOGGING_LEVEL_EU_PIERIX_CRMV3: INFO
      
      # Performance Configuration
      SPRING_JPA_OPEN_IN_VIEW: true
      
      # Health Check Configuration
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: when-authorized
      
      # Error Handling (Production)
      SERVER_ERROR_INCLUDE_STACKTRACE: never
      SERVER_ERROR_INCLUDE_MESSAGE: never
      SERVER_ERROR_INCLUDE_BINDING_ERRORS: never
      
      # Session Management (Production)
      SERVER_SERVLET_SESSION_TIMEOUT: 30m
      SERVER_SERVLET_SESSION_COOKIE_SECURE: true
      SERVER_SERVLET_SESSION_COOKIE_HTTP_ONLY: true
      
      # Connection Pool (Production optimiert)
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 10
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 5
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000
      SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: 600000
      SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: 1800000
      
      # Hibernate Batch Processing (Production)
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE: 20
      SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS: true
      SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES: true
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_VERSIONED_DATA: true

      # Security (Production)
      SPRING_SECURITY_REQUIRE_SSL: true
      
      # CORS (Production)
      SPRING_WEB_CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      SPRING_WEB_CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,OPTIONS
      SPRING_WEB_CORS_ALLOWED_HEADERS: "*"
      SPRING_WEB_CORS_ALLOW_CREDENTIALS: true
      SPRING_WEB_CORS_MAX_AGE: 3600
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crm-network

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: crm_prod_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${DOCKER_DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_prod_user -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - crm-network

  # Optional: Redis f√ºr Session Management und Caching
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "${DOCKER_REDIS_PORT:-6379}:6379"
    volumes:
      - redisdata:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - crm-network

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local

networks:
  crm-network:
    driver: bridge 