spring.application.name=${SPRING_APPLICATION_NAME:crm-v3}

# Server Configuration
server.port=${SERVER_PORT:8080}

# Database Configuration (Production)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:crm_db}
spring.datasource.username=${DB_USERNAME:crm_user}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration (Production optimiert)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Lazy Loading Configuration (Production)
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=${SPRING_JPA_OPEN_IN_VIEW:true}

# Connection Pool Configuration (Production)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Logging Configuration (Production - weniger verbose)
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=WARN
logging.level.eu.pierix.crmv3=INFO

# JWT Configuration (Production - sicherer)
jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.refresh-token.expiration=${JWT_REFRESH_TOKEN_EXPIRATION:2592000000}
jwt.debug=${JWT_DEBUG:false}

# Admin User Configuration (Production - deaktiviert oder sicherer)
admin.user.enabled=${ADMIN_USER_ENABLED:true}
admin.user.username=${ADMIN_USERNAME:admin}
admin.user.email=${ADMIN_EMAIL:admin@crmv3.de}
admin.user.firstName=${ADMIN_FIRST_NAME:Admin}
admin.user.lastName=${ADMIN_LAST_NAME:User}
admin.user.password=${ADMIN_PASSWORD:}

# Security Configuration (Production)
spring.security.require-ssl=true
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEY_STORE:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}
server.ssl.key-alias=${SSL_KEY_ALIAS:}

# Health Check Endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Error Handling (Production)
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# CORS Configuration (Production)
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600